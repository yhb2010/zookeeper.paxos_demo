服务器启动时期的leader选举：
	1、每个server会发出一个投票，由于是初始情况，因此对于server1和server2来说，都会将自己作为leader服务器来投票，每次投票包含的
	最基本的元素为：所推举的服务器的myid和zxid，我们以(myid, zxid)的形式来表示。因为是初始化阶段，因此无论是server1和是server2
	都会投给自己，即server1的投票为(1, 0)，server2的投票为(2, 0)，然后各自将这个投票发给集群中其它所有机器。
	2、接收来自各个服务器的投票
	每个服务器都会接收来自其它服务器的投票，接收到后会判断该投票的有效性，包括检查是否是本轮投票，是否来自looking状态的服务器。
	3、处理投票
	在接收到来自其它服务器的投票后，针对每一个投票，服务器都需要将别人的投票和自己的投票进行pk，pk的规则如下：
	优先检查zxid，zxid大的服务器优先作为leader。
	如果zxid相同，那么比较myid，myid大的服务器作为leader服务器。
	现在我们来看server1和server2实际是如何进行投票的，对于server1来说，他自己的投票是(1, 0)，而接收到的投票为(2, 0)。首先会对
	比两者的zxid，因为都是0，所以接下来会比较两者的myid，server1发现接收到的投票中的myid是2，大于自己，于是就会更新自己的投票为
	(2, 0)，然后重新将投票发出去，而对于server2，不需要更新自己的投票信息，只是再一次向集群中的所有机器发出上一次投票信息即可。
	4、统计投票
	每次投票后，服务器都会统计所有投票，判断是否已经有过半的机器接收到相同的投票信息，对于server1和server2来说，都统计出集群中已经
	有两台机器接受了(2, 0)这个投票信息。这里过半的概念是指大于集群机器数量的一半，即大于或等于(n/2+1)。对于这里由3台机器构成的集群
	大于等于2台即为达到过半要求。
	5、改变服务器状态
	一旦确定了leader，每个服务器就会更新自己的状态，如果是follower，那么就变更为following，如果是leader，就变更为leading。

服务器运行期间的leader选举
	1、变更状态
	当leader挂了之后，余下的非observer服务器都会将自己的状态变为looking，然后开始进行leader选举流程。
	2、每个server会发出一个投票
	在这个过程中，需要生成投票信息(myid, zxid)，因为是运行期间，因此每个服务器上的zxid可能不同，我们假定server1的zxid为123，而
	server3的zxid为122.在第一轮投票中，server1和server3都会投给自己，即分别产生投票(1, 123)和(3, 122)，然后各自将这个投票发
	给集群中的所有机器。
	3、接收来自各个服务器的投票
	4、处理投票
	对于投票的处理，和上面提到的服务器启动期间的处理规则是一致的，在这个例子中，由于server1的zxid是123，server3的zxid是122，显然
	server1会成为leader。
	5、统计投票
	6、改变服务器状态

选举算法分析：
	进入leader选举
	当zookeeper集群中的一台服务器出现以下两种情况之一时，就会开始进入leader选举：
	1、服务器初始化启动
	2、服务器运行期间无法和leader保持连接
	而当一台机器进入leader选举流程时，当前集群也可能会处于以下两种状态：
	1、集群中本来就已经存在一个leader
	2、集群中确实不存在leader
	我们首先来看第一种已经存在leader的情况，这种情况通常是集群中的某一台机器启动比较晚，在它启动之前，集群已经可以正常工作，即已经
	存在一台leader服务器。针对这种情况，当该机器试图去选举leader的时候，会被告知当前服务器的leader信息，对于该机器来说，仅仅需要
	和leader机器建立连接，并进行状态同步即可。

主从架构下，leader 崩溃，数据一致性怎么保证？
	leader 崩溃之后，集群会选出新的 leader，然后就会进入恢复阶段，新的 leader 具有所有已经提交的提议，因此它会保证让 followers 同步已提交的提
	议，丢弃未提交的提议（以 leader 的记录为准），这就保证了整个集群的数据一致性。
选举 leader 的时候，整个集群无法处理写请求的，如何快速进行 leader 选举？
	这是通过 Fast Leader Election 实现的，leader 的选举只需要超过半数的节点投票即可，这样不需要等待所有节点的选票，能够尽早选出 leader。